// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc157.FRC2016.commands;


import org.usfirst.frc157.FRC2016.commands.AutoDriveSpeedForTime;
import org.usfirst.frc157.FRC2016.Robot;
import org.usfirst.frc157.FRC2016.RobotMap;
import org.usfirst.frc157.FRC2016.subsystems.Arm;
import org.usfirst.frc157.FRC2016.AnalogSelectSwitch.SwitchPosition;
import edu.wpi.first.wpilibj.command.CommandGroup;

/**
 *
 */
public class AutonomousCommand extends CommandGroup 
{

	public AutonomousCommand() {

		requires(Robot.drive);

		SwitchPosition switchPosition = RobotMap.modeSelect.getPosition();

		System.out.println("Autonomous Switch: " + switchPosition);

		switch(switchPosition)
		{
    		case POSITION_0:
    		{
                System.out.println("\n*********************************\n");
                System.out.println("Autonomous Position 0");
                addSequential(new PrintButton(">>> Autonomous Position 0"));
    		    //Do nothing case
    	        break;
    		}
       
    		case POSITION_1:
    		{
    			System.out.println("\n*********************************\n");
    			System.out.println("Autonomous Position 1");
    
    			addSequential(new PrintButton(">>> Autonomous Position 1"));
    			addSequential(new ArmShoulderMoveToAngle(Arm.Position.HOME.angle()));
    			addSequential(new AutoDriveSpeedForTime(0.5, 0.5, 3.5));
    			break;
    		}
    		case POSITION_2:
    		{
    			System.out.println("\n*********************************\n");
    			System.out.println("Autonomous Position 2");
    			addSequential(new PrintButton(">>> Autonomous Position 2"));
    			addSequential(new ArmShoulderMoveToAngle(Arm.Position.HOME.angle()));
    			addSequential(new AutoDriveSpeedForTime(0.75, 0.75,2.5));
    			break;
    		}	
    		
    		case POSITION_3:
    		{
    			System.out.println("\n*********************************\n");
    			System.out.println("Autonomous Position 3");
    			
    			addSequential(new PrintButton(">>> Autonomous Position 3"));
    			addSequential(new ArmShoulderMoveToAngle(Arm.Position.HOME.angle()));
                addSequential(new AutoDriveSpeedForTime(1, 1, 2.0));
    			//unimplemented
    			break;
    		}
    		case POSITION_4:
            {
                System.out.println("\n*********************************\n");
                System.out.println("Autonomous Position 4");
                addSequential(new ArmShoulderMoveToAngle(Arm.Position.HOME.angle()));
    			addSequential(new AutoDriveMoveDistance(0.75, 0.75,144));
    			addSequential(new AutoDriveTurnByAngle(-63.44));
    			addSequential(new AutoDriveMoveDistance(0.75, 0.75,144));
    
//                addSequential(new PrintButton(">>> Autonomous Position 4"));
//                //addSequential(new AutoDriveTurnToHeading(90));
//                addSequential(new PrintButton(">>> Autonomous Position 1"));
//                addSequential(new ArmShoulderMoveToAngle(Arm.Position.HOME.angle()));
//                addSequential(new AutoDriveSpeedForTime(0.5, 0.5, 3.5));
//                addSequential(new AutoDriveSpeedForTime(-0.5, -0.5, 3.5));
                break;
            }
    		
    		case POSITION_5:
    		{
    			System.out.println("\n*********************************\n");
    			System.out.println("Autonomous Position 5");

    			addSequential(new PrintButton(">>> Autonomous Position 5"));
    			//unimplemented
    			break;
    		}
		}

 
	}
}
